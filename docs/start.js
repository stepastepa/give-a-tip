import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js';

import {
  getAuth,
  onAuthStateChanged
} from 'https://www.gstatic.com/firebasejs/10.12.0/firebase-auth.js';

import {
  getFirestore,
  collection,
  getDocs
} from 'https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js';

const firebaseConfig = {
  apiKey: "AIzaSyB9ekJy28TCq-CsQh3fb0ibyIgPZbEIpxo",
  authDomain: "give-a-tip.firebaseapp.com",
  projectId: "give-a-tip",
  storageBucket: "give-a-tip.firebasestorage.app",
  messagingSenderId: "177375336520",
  appId: "1:177375336520:web:2f53a6f95dbe4b753d207d",
  measurementId: "G-06X0NRB6H2"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);

////////////////////////////////////////////////
////////////////////////////////////////////////

const searchResults = document.getElementById('searchResults');

////////////////////////////////////////////////
/////     activate searchbar animation     /////
////////////////////////////////////////////////

const searchInput = document.getElementById('searchInput');
const inputBox = document.querySelector('.search-bar');
const mainWrapper = document.querySelector('.wrapper');

searchInput.addEventListener('input', () => {
  if(searchInput.value !== '') {
    inputBox.classList.add('active');
  } else if (!searchInput.value) {
    inputBox.classList.remove('active');
  }
});

const isProbablyMobileWithKeyboard = () =>
  'ontouchstart' in window &&
  /iPhone|Android|Mobile|iPad/i.test(navigator.userAgent);

if (isProbablyMobileWithKeyboard()) {
  inputBox.classList.add('mobile');
}
/*
// –≤—ã—Å–æ—Ç–∞ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏ –±—Ä–∞—É–∑–µ—Ä–∞ —Å –≤–∫–ª—é—á–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
function getVisibleHeight() {
  if (window.visualViewport) {
    return window.visualViewport.height;
  }
  return window.innerHeight;
}

function onKeyboardChange() {
  const visibleHeight = getVisibleHeight();
  mainWrapper.style.setProperty('--result-height', `calc(${visibleHeight}px - 2rem - (1.5rem + 2rem))`);
  mainWrapper.style.setProperty('--height', `${visibleHeight}px`);
}

// –°–ª–µ–¥–∏–º –∑–∞ –ø–æ—è–≤–ª—è—é—â–µ–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
if (window.visualViewport) {
  window.visualViewport.addEventListener('resize', onKeyboardChange);
} else {
  window.addEventListener('resize', onKeyboardChange);
}

// —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —ç–∫—Ä–∞–Ω–∞ (—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π) –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ø–æ–∏—Å–∫
searchInput.addEventListener('focus', () => {
  onKeyboardChange();
});
*/
//////////////////////////////////////////////////
// —Å–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ

function removeInputFocusOnScroll() {
  // –ü—Ä–æ–≤–µ—Ä–∏–º: –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç (–∏ —ç—Ç–æ input –∏–ª–∏ textarea)
  const active = document.activeElement;
  if (active && (active.tagName === 'INPUT' || active.tagName === 'TEXTAREA')) {
    active.blur(); // –°–Ω–∏–º–µ—Ç —Ñ–æ–∫—É—Å, —Å–∫—Ä–æ–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  }
}

// —Å–∫—Ä–æ–ª–ª –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('scroll', () => {
  removeInputFocusOnScroll();
}, { passive: true });
// —Å–∫—Ä–æ–ª–ª —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞
searchResults.addEventListener('scroll', () => {
  removeInputFocusOnScroll();
}, { passive: true });

/////////////////////////////
/////     searching     /////
/////////////////////////////

// –ø–æ–ª—É—á–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä–æ–≤
let couriers = [];

let dbSnapshot = '';
async function getSnapshot() {
  dbSnapshot = await getDocs(collection(db, 'couriers'));
}
getSnapshot();

async function showResults(query) {
  couriers = []; // —Å—Ç–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫

  // –∏—â–µ–º –∫—É—Ä—å–µ—Ä–æ–≤ –ø–æ –∏–º–µ–Ω–∏ –∏ —Å–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫
  dbSnapshot.forEach(doc => {
    const data = doc.data();
    if(data.name.toLowerCase().includes(query.toLowerCase())) {
      let courier = {};
      courier.username = data.username;
      courier.name = data.name;
      couriers.push(courier);
    }
  });

  if (couriers.length === 0) {
    searchResults.innerHTML = `Can't find courier... üòû`;
    inputBox.classList.add('empty');
  } else {
    searchResults.innerHTML = couriers.map(el =>
      `<a href="./profile.html?username=${el.username}">${el.name}</a>`
    ).join('');
    inputBox.classList.remove('empty');
  }
}

searchInput.addEventListener('input', event => {
  showResults(event.target.value);
  updateMask(); // –æ–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å–∫—É –Ω–∞ —Å–∫—Ä–æ–ª–ª–µ !!!
  setTimeout(() => { // –µ—â–µ —Ä–∞–∑ –æ–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å–∫—É –∏–∑-–∑–∞ css –∞–Ω–∏–º–∞—Ü–∏–∏ 0.3s !!!
      updateMask();
  }, 300);
});

/////////////////////////////////////////
/////     dynamic mask gradient     /////
/////////////////////////////////////////

function updateMask() {
  const scrollTop = searchResults.scrollTop; // —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –≤–µ—Ä—Ö–∞ –ø—Ä–æ–∫—Ä—É—á–µ–Ω–Ω–æ–µ
  const scrollHeight = searchResults.scrollHeight; // –ø–æ–ª–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  const clientHeight = searchResults.clientHeight; // –≤–∏–¥–∏–º–∞—è –≤—ã—Å–æ—Ç–∞ "–æ–∫–Ω–∞"

  const isAtTop = scrollTop <= 0;
  const isAtBottom = scrollTop + clientHeight >= scrollHeight - 1;

  let gradient = '';

  if (isAtTop && isAtBottom) {
    // –≤—Å—ë –ø–æ–º–µ—â–∞–µ—Ç—Å—è –∏ —Å–∫—Ä–æ–ª–ª –Ω–µ –Ω—É–∂–µ–Ω, –µ–≥–æ –Ω–µ—Ç —É –±–ª–æ–∫–∞
    gradient = "none";
  } else if (isAtTop) {
    // –¢–æ–ª—å–∫–æ –Ω–∏–∂–Ω—è—è —Ç–µ–Ω—å
    console.log('top');
    gradient = `linear-gradient(to bottom, black 0%, black calc(100% - 1rem), transparent 100%)`;
  } else if (isAtBottom) {
    // –¢–æ–ª—å–∫–æ –≤–µ—Ä—Ö–Ω—è—è —Ç–µ–Ω—å
    console.log('bottom');
    gradient = `linear-gradient(to bottom, transparent 0%, black 1rem, black 100%)`;
  } else {
    // –í–µ—Ä—Ö –∏ –Ω–∏–∑
    console.log('middle');
    gradient = `linear-gradient(to bottom, transparent 0%, black 1rem, black calc(100% - 1rem), transparent 100%)`;
  }

  searchResults.style.maskImage = gradient;
  searchResults.style.webkitMaskImage = gradient;
}

searchResults.addEventListener('scroll', updateMask);
window.addEventListener('load', updateMask); // –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–µ, –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç...
window.addEventListener('resize', updateMask); // —á—Ç–æ–± –æ–±–Ω–æ–≤–ª—è–ª–æ –º–∞—Å–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ —Ç–æ–∂–µ


/////////////////////////////////
/////    secure redirect    /////
/////////////////////////////////

loginBtn.addEventListener('click', () => secureRedirect('./edit.html', './login.html'));

function secureRedirect(editLink, loginLink) {
  onAuthStateChanged(auth, user => {
    if (user) {
      window.location.href = editLink;
    } else {
      window.location.href = loginLink;
    }
  });
}