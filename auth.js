const crypto = require('crypto');

// üü™ –°–æ–∑–¥–∞–Ω–∏–µ —Ö—ç—à–∞ –ø–∞—Ä–æ–ª—è —Å —Å–æ–ª—å—é
function hashPassword(password) {
  const salt = crypto.randomBytes(16).toString('hex');
  const hash = crypto.pbkdf2Sync(password, salt, 100000, 64, 'sha512').toString('hex');
  return { salt, hash };
}

// üü™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è: –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è + —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ hash –∏ salt
function verifyPassword(password, storedHash, storedSalt) {
  const hash = crypto.pbkdf2Sync(password, storedSalt, 100000, 64, 'sha512').toString('hex');
  return hash === storedHash;
}

module.exports = {
  hashPassword,
  verifyPassword,
};